// <auto-generated />
using APIDemo.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIDemo.Migrations
{
    [DbContext(typeof(CityInfoContext))]
    [Migration("20230510120650_UpdateDatabase")]
    partial class UpdateDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.16");

            modelBuilder.Entity("APIDemo.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Big City",
                            Name = "Ho Chi Minh"
                        },
                        new
                        {
                            Id = 2,
                            Description = "City",
                            Name = "Ha Noi"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Tour City",
                            Name = "Da Lat"
                        });
                });

            modelBuilder.Entity("APIDemo.Entities.PointOfInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("PointOfInterests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Name = "Central Parl"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            Name = "Empire State Building"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 2,
                            Name = "Vung Tau"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 2,
                            Name = "Ba Ria"
                        },
                        new
                        {
                            Id = 5,
                            CityId = 3,
                            Name = "Dong Thap"
                        },
                        new
                        {
                            Id = 6,
                            CityId = 3,
                            Description = "Nothing Here",
                            Name = "Hoc Mon"
                        });
                });

            modelBuilder.Entity("APIDemo.Entities.PointOfInterest", b =>
                {
                    b.HasOne("APIDemo.Entities.City", "City")
                        .WithMany("PointOfInterests")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("APIDemo.Entities.City", b =>
                {
                    b.Navigation("PointOfInterests");
                });
#pragma warning restore 612, 618
        }
    }
}
